#!/usr/local/bin/python
#Project Euler 

# Even Fibonacci numbers
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous 
# two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed
#  four million, find the sum of the even-valued terms.

def evencheck(fib1):
	if float(fib1)/float(2) == int(fib1)/int(2):
		return fib1

	else:
		return 0

def fibcheck(upbound):
	x = 0
	y = 1
	z = 1
	fibsum = 0
	while z <= upbound:
		fibsum += evencheck(z)
		z = x + y
		x = y
		y = z

	return fibsum

print fibcheck(4000000)
		


